<?php  
## Student

// 1. Status of submitted articles (e.g., pending review, selected, rejected)
SELECT status, COUNT(*) AS count
FROM articles
WHERE user_id = 
GROUP BY status;

1. **Number of comments received on their articles**

SELECT COUNT(*) AS comments_received
FROM comments
WHERE article_id IN (SELECT article_id FROM articles WHERE user_id = );

1. **Total number of articles submitted by a student**

SELECT COUNT(*) AS articles_submitted
FROM articles
WHERE user_id =2 AND status='submitted';

## **Faculty Marketing Coordinator**

1. Total number of students in their faculty

SELECT COUNT(*) AS total_students
FROM users
WHERE faculty_id = ; 

1. Total number of articles submitted by students in their faculty

SELECT COUNT(*) AS total_articles
FROM articles
WHERE user_id IN (SELECT id FROM users WHERE faculty_id = ) AND status='submitted';

1. Percentage of students who submitted at least one article

SELECT
(COUNT(DISTINCT a.user_id) * 100.0 / COUNT([u.id](http://u.id/))) AS percentage_students_submitted
FROM users u
LEFT JOIN articles a ON [u.id](http://u.id/) = a.user_id
WHERE u.faculty_id =  ;

1. Total number of comments added to contributions

SELECT COUNT(*) AS total_comments
FROM comments
WHERE article_id IN (SELECT article_id FROM articles WHERE user_id IN (SELECT id FROM users WHERE faculty_id = ?));

1. Contributions without a comment

SELECT COUNT(*) AS contributions_without_comment
FROM articles a
LEFT JOIN comments c ON a.article_id = c.article_id
WHERE c.comment_id IS NULL AND a.user_id IN (SELECT id FROM users WHERE faculty_id = ?);

1. Contributions without a comment after 14 days

SELECT COUNT(*) AS contributions_without_comment_14_days
FROM articles a
LEFT JOIN comments c ON a.article_id = c.article_id
WHERE c.comment_id IS NULL AND a.created_at <= NOW() - INTERVAL 14 DAY
AND a.user_id IN (SELECT id FROM users WHERE faculty_id = ?);

## **University Marketing Manager**

1. Total number of faculties in the university

SELECT COUNT(*) AS total_faculties
FROM faculties;

1. Total number of articles selected by faculty marketing coordinators

SELECT COUNT(*) AS total_selected_articles
FROM articles a
JOIN users u ON a.user_id = [u.id](http://u.id/)
JOIN faculties f ON u.faculty_id = [f.id](http://f.id/)
WHERE a.status = 'selected';  -- Assuming 'selected' is the status for articles approved by coordinators

1. Total number of articles submitted by each faculty

SELECT f.faculty_name, COUNT(a.article_id) AS total_articles
FROM articles a
JOIN users u ON a.user_id = [u.id](http://u.id/)
JOIN faculties f ON u.faculty_id = [f.id](http://f.id/)
GROUP BY f.faculty_name;

1. Percentage of contributions by each faculty for any academic year

SELECT
f.faculty_name,
(COUNT(a.article_id) * 100.0 / (SELECT COUNT(*) FROM articles WHERE YEAR(created_at) = ?)) AS contribution_percentage
FROM articles a
JOIN users u ON a.user_id = [u.id](http://u.id/)
JOIN faculties f ON u.faculty_id = [f.id](http://f.id/)
WHERE YEAR(a.created_at) = ?
GROUP BY f.faculty_name;

1. Number of downloaded files

SELECT COUNT(*) AS total_downloads
FROM doc_attachment;

1. Contributions without a comment

SELECT COUNT(*) AS contributions_without_comment
FROM articles a
LEFT JOIN comments c ON a.article_id = c.article_id
WHERE c.comment_id IS NULL;

1. Contributions without a comment after 14 days

SELECT COUNT(*) AS contributions_without_comment_14_days
FROM articles a
LEFT JOIN comments c ON a.article_id = c.article_id
WHERE c.comment_id IS NULL AND a.created_at <= NOW() - INTERVAL 14 DAY;

**Total number of articles submitted**

SELECT status, COUNT(*) AS articles_count
FROM articles
WHERE status = 'submitted'  
GROUP BY status;

## Administrator

1. Total number of students in the entire university

SELECT COUNT([users.id](http://users.id/)) AS total_students
FROM users
JOIN role_user ON [users.id](http://users.id/) = role_user.user_id
WHERE role_user.role_id = 2;

1. Total number of managers in the entire university

SELECT COUNT([users.id](http://users.id/)) AS total_managers
FROM users
JOIN role_user ON [users.id](http://users.id/) = role_user.user_id
WHERE role_user.role_id = 3;

1. Total number of coordinators in the entire university

SELECT COUNT([users.id](http://users.id/)) AS total_managers
FROM users
JOIN role_user ON [users.id](http://users.id/) = role_user.user_id
WHERE role_user.role_id = 4;

1. Total number of guests in the entire university

SELECT COUNT([users.id](http://users.id/)) AS total_guest_users
FROM users
JOIN role_user ON [users.id](http://users.id/) = role_user.user_id
WHERE role_user.role_id = 5;