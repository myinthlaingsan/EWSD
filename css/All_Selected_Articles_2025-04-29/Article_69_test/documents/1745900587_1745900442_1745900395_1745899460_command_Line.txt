change drive c to e (cd e:)
pwd
cd - change directory
mkdir myjsproject (create new folder)
cd myjsproject (move to myjsproject folder)
touch example.js (create new file)
code example.js (open file)

exercise
Instructions

Step 1: Open Terminal in your VS code editor.  

Step 2: Type the command mkdir lab and press Enter

Step 3: Change to the lab directory by typing cd lab and pressing Enter

Step 4: Type the command touch file1.txt and press Enter to create a file named file1.txt

Step 5: Type the command mkdir dir1 and press Enter

Step 6: Type the command mv file1.txt dir1/ and press Enter to move file1.txt to the dir1 directory

Step 7: Type the command touch file2.txt and press Enter to create a file named file2.txt

Step 8: Type the command mkdir -p dir2/dir3 and press Enter. We're using the -p flag to create the parent directories if they do not exist. In this case it will create the dir2 directory and then create the dir3 directory inside of dir2.

Step 9: Type the command mv file2.txt dir2/dir3/ and press Enter to move file2.txt to the dir3 directory

Step 10: Change to the dir2 directory by typing cd dir2

Step 11: Type the command touch file3.txt and press Enter to create a file named file3.txt

Step 12: Type the command mv file3.txt ../ and press Enter to move file3.txt to the lab directory

Step 13: Type the command cd .. and press Enter to navigate back to the lab directory

Step 14: Type the command cd dir1 and press Enter.

Step 15: Type the command ls -l and press Enter. Note how many files and directories are in the dir1 directory.

Step 16: Type the command cd ../dir2 and press Enter.

Step 17: Type the command ls -l and press Enter. Note how many files and directories are in the dir2 directory.

Step 18: Type the command cd dir3 and press Enter.

Step 19: Type the command ls -l and press Enter. Note how many files and directories are in the dir3 directory.

less name.txt (will show the content of the files)
grep Sam name.txt (will add Sam to the name.txt)
grep -w Sam name.txt (only add Sam to name.txt)

GitHub
Create a Git repository
Change Git privacy
Clone a Git

cd my-first-repo
ls
ls -l
ls -la (show list all)
Modified ->(git add)->staged ->(git commit)-> committed
git clone URL
You are working on a project and have to share some code with a colleague.  What is the correct order the code will flow in Git workflow?   
Working directory, staging area, committed files, remote repository 

git status(what branch)
git add (git command that marks a file to be included as part of a code commit)

git commit -m "Adding a new file for testing"
eg. git checkout -B feature/lesson
Switched to a new branch 'feature/lesson'
git branch (will show all branches)
git checkout main (change to main branch)
touch test2.txt
git add test2.txt
git commit -m 'Add test2.txt'
git push -u origin feature/lesson
